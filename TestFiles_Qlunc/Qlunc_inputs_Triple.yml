# Francisco Costa García
# University of Stuttgart, Stuttgart Wind Energy (SWE) 2020 (c) 


# IMPORTANT- README
# Input file for   --->>  Qlunc-v2.0  <<----
# Do not change definition names or vary the structure of the file!! Just change parameter values. 
# Users can find a yaml format template in the repository '/TestFiles_Qlunc/Template_inputs_file.yml'

# (*)  --> Python module! (You develop a function and save it as a python module)
# (**) --> Has to be the same name as the instance

######################################################################################
##################################   QLUNC INPUTS   ##################################
######################################################################################

# DIRECTORY -------------------------------------------------------------------------------------------

Main directory: 'C:\SWE_LOCAL\Qlunc\' # Directory where Qlunc_Classes.py is

# Lidar values. Modules and components parameters ------------------------------------------------------

Components:
#Optics: 
  Scanner:
    
    Name: Scanner_Yaml # Provide an ID to your scanner:      
    Origin:  [[293.88,0,0],[603.057,-178.499,0],[603.057,178.499,0]]  #  Lidar position in meters (each vector is one lidar): [x,y,z] 
    Error origin: [[0,0,0],[0,0,0],[0,0,0]] # [m] Error in the location of the lidar (GPS error)
       
    # N° of points for the Montecarlo simulation 
    N_MC: 10000
    
    # Measuring patterns
    
    # Lissajous patterns:
    Lissajous parameters: [50,50,1000,3,3] # [x_dim,y_dim,z_dim,q,p]
    
    #Vertical plane parameters
    Vertical plane parameters: [500,89.15,-89.15,29.85,208.15,45] # [distance_plane, y_max, y_min, z_min, z_max, n°points]
    
    #Horizontal plane parameters
    Horizontal plane parameters: [1000,-1000,1000,-1000,100,50] # [x_max, x_min, y_max, y_min, height, n°points]    
        
    # Measuring pattern 
    Pattern: 'None' # 'vertical plane','horizontal plane', 'lissajous', user defined pattern or 'None' in case none predefined pattern is used

  
    # STDV in lidar angles and focus distance
    stdv focus distance:  [  [2],  [2],  [2]  ] # [m] One value for each lidar
    stdv Elevation angle: [ [.1], [.1], [.1]  ] # [deg]
    stdv Azimuth:         [ [.1], [.1], [.1]  ] # [deg]   
    stdv Estimation:      [ [.0], [.0]  ] # [m/s]       # error, as standard uncertainty, in the estimation of the Vlos from the doppler spectra 
    
    # Correlations betwen the lidars 1, 2 (if dual lidar system) and 3 (if triple lidar system)
    correlations: [ 0.0,  # Psi1Psi2
                    0.0,  # Psi1Psi3
                    0.0,  # Psi2Psi3
                                       
                    0.0 , # Theta1Theta2
                    0.0 , # Theta1Theta3
                    0.0 , # Theta2Theta3
                             
                    0.0,  # Rho1Rho2
                    0.0,  # Rho1Rho3
                    0.0,  # Rho2Rho3
                   
                    0.0,  # Psi1Theta1
                    0.0,  # Psi2Theta2
                    0.0,  # Psi3Theta3
                    
                    0.0,  # Psi1Theta2
                    0.0,  # Psi1Theta3
                    
                    0.0,  # Psi2Theta1
                    0.0,  # Psi2Theta3
                                       
                    0.0,  # Psi3Theta1
                    0.0]  # Psi3Theta2

    
    # Measurement point coordinates in spherical (related to the inertial coordinate system)    
    Rho:   [500]   # [m]   - Focus distance
    Theta: [13.76] # [deg] - Theta increases from the ground (elevation angle)
    Psi:   [0]     # [deg] - Psi increases from x towards y axis (Azimuth)
    Href:  1.0e+2  # [m]   - Reference height
    
  Laser:
    Name: Laser_YAML
    Wavelength: 1550.e-9         # [m]
    stdv Wavelength: 0.1e-9      # [m] plus/minus--> it is assumed a rectangular distribution (stdv_Wavelength/sqrt(3)) 
    Uncertainty function: uphc.UQ_Laser   
    # Uncertainty function
    Uncertainty function: uopc.UQ_Scanner
    
# Photonics  
 
  Photodetector:
    Name: Photodetector_YAML
    Photodetector BandWidth: 2.e+9       # [Hz]            
    Load resistor: 500                   # [Ohm]
    Photodetector efficiency: .70        # [-] - Photodetector efficiency
    Dark current: .6e-9                  # [A] - Dark current in the photodetector.
    Photodetector signalP: 1.e-3         # [W/m^2]
    Power interval: [1.e-5,1.e-2,1.e-6]  # [W] - [initial, final, step]
    Gain TIA: 50.e+3                     # [W] - Value or 'None' if no TIA in the photodetector
    Active area: 1                       # [m] - Keep it 1;
    V Noise TIA:  2.e-3                  # [V] - Value or 'None' if no TIA in the photodetector
    # Uncertainty function
    Uncertainty function: uphc.UQ_Photodetector # Python module! (You develop a function and save it as a python module)
  

# Analog to digital converter: Performs the uncertainty in signal processing
  ADC:
    Name: ADC_Yaml
    Number of bits: 8           # Effective number of bits (ENOB)
    Reference voltage: 3.3
    Ground voltage: 0
    Quantization error: 0.5
    Sampling frequency: 100.e+6
    Uncertainty sampling freq: 2.e-6 # [Hz] -  #*fs 
    Speckle noise: 0.02           # [%] noise in % of the Doppler frequency
    ADC Bandwidth: 1.e+9
    # Uncertainty function
    Uncertainty function: uspc.UQ_SignalProcessor_Classes
        
# Lidar general inputs 
  Lidar general inputs:
    Name: Lidar_gral_inputs_Yaml
    Type: Pulsed       # CW/Pulsed for continuous wave or pulsed lidars.
    Yaw error: 0       # [deg]
    Pitch error: 0     # [deg]
    Roll error: 0      # [deg]
    DataFrame: {}      # Leave empty. To be filled with ouputs by the code itself
---
# Modules:
Modules:
  
  Optics Module:
    Name: Optics_module_Yamlpl
    Scanner: Scanner                          # (**)
    Uncertainty function: uopc.sum_unc_optics # (*)
  
  Photonics Module:
    Name: Photonics_module_Yaml
    Photodetector: Photodetector                 # (**)
    Uncertainty function: uphc.sum_unc_photonics # (*)
  
  Signal processor Module:
    Name: Signal_processor_module_Yaml
    ADC: ADC #(**)
    Frequency analyser: 'None' #Frequency_analyser
---  
# Lidar:
Lidar:
  Name: Test   # This will be the name of the project
  Photonics module: Photonics_Module        # (**)
  Optics module: Optics_Module              # (**)
  Signal processor: Signal_processor_Module # (**)
  Lidar inputs: Lidar_inputs                # (**)
  Uncertainty function: ulc.sum_unc_lidar   # (*)

---

# ATMOSPHERIC INPUTS -----------------------------------------------
# Atmospheric_inputs to create the atmospheric scenarios

Atmospheric_inputs:
  Name: 'Atmosphere_Yaml'
  TimeSeries    : False         # This defines whether we are using a time series (True) or single values (False) to describe the atmosphere characteristics (T, H, rain and fog)   
  Atmos_TS_FILE : 'None'        #'AtmosphericScenarios.csv'  # (... .csv)
  Temperature: [300]            # [K] Have to put the same number of elements for temperature and humidity. Always in paired values   
  Humidity: [12]                # [%] 
  Rain: true                    # for rain and fog intensity intervals might be introduced [none,low, medium, high]
  Fog: false
  Height ground: 0              # [m] Ground height
  Power law exponent: [0,.1,.2] # power law exponent. Vector of alpha values.
  Vref: 10                      # [m/s] - Reference velocity
  Wind direction:  [0,359,360]  # [deg] - [from,to,n°points]
  Wind tilt: [0,0,1]            # [deg] - [from,to,n°points]
  
---

# Plotting ------------------------------------------------------------
Flags:
  Photodetector noise: True
  Save data: False 
  Scanning uncertainties: True
  Line of sight velocity uncertainty: True
  Wind velocity uncertainty: True
  Wind direction uncertainty: True











































